==========================================
Wagtail 0.5 release notes - IN DEVELOPMENT
==========================================

.. contents::
    :local:
    :depth: 1


What's new
==========

Multiple image uploader
~~~~~~~~~~~~~~~~~~~~~~~

The image uploader UI has been improved to allow multiples to be uploaded quickly.


Image feature detection
~~~~~~~~~~~~~~~~~~~~~~~

Wagtail can now apply face and feature detection on images using `OpenCV <http://opencv.org/>`_, and use this to intelligently crop images.

:ref:`image_feature_detection`


RoutablePage
~~~~~~~~~~~~

A ``RoutablePage`` model has been added to allow embedding Django-style URL routing within a page.

:ref:`routable_page`


Minor features
~~~~~~~~~~~~~~

Core
----

 * Hooks can now be defined using decorator syntax:

  .. code-block:: python

    @hooks.register('construct_main_menu')
    def construct_main_menu(request, menu_items):
        menu_items.append(
            MenuItem('Kittens!', '/kittens/', classnames='icon icon-folder-inverse', order=1000)
        )

 * The lxml library (used for whitelisting and rewriting of rich text fields) has been replaced with the pure-python html5lib library, to simplify installation.
 * A ``page_unpublished`` signal has been added.


Admin
-----

 * Explorer nav now rendered separately and fetched with AJAX when needed.

   This improves the general performance of the admin interface for large sites.


Bug fixes
~~~~~~~~~

 * Updates to tag fields are now properly committed to the database when publishing directly from the page edit interface.


Upgrade considerations
======================

New fields on Image and Rendition models
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Several new fields have been added to the Image and Rendition models to support :ref:`image_feature_detection`. These will be added to the database when you run ``./manage.py migrate``. If you have defined a custom image model (by extending the ``wagtailimages.AbstractImage`` and ``wagtailimages.AbstractRendition`` classes and specifying ``WAGTAILIMAGES_IMAGE_MODEL`` in settings), the change needs to be applied to that model's database table too. Running the command::

  ./manage.py schemamigration myapp --auto add_image_focal_point_fields``

(with 'myapp' replaced with your app name) will generate the necessary migration file.


Deprecated features
===================
